plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.12.0'
}

group = 'ru.ramzil-fattakhov'
version = '1.0-SNAPSHOT'

def     slf4jVersion = "2.0.7",
        junitVersion = "5.11.4",
        selenideVersion = "7.7.0",
        javaFakerVersion = "1.0.2",
        allureVersion = "2.29.1",
        ownerVersion = "1.0.4",
        webDriverManagerVersion = "5.6.3",
        assertjVersion = "3.27.3"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.github.javafaker:javafaker:$javaFakerVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "io.github.bonigarcia:webdrivermanager:$webDriverManagerVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "org.assertj:assertj-core:$assertjVersion"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task smoke_test(type: Test) {
    useJUnitPlatform {
        includeTags("smoke")
    }
}

task regression_test(type: Test) {
    useJUnitPlatform {
        includeTags("regression")
    }
}

task mainPage_tests(type: Test) {
    useJUnitPlatform {
        includeTags("mainPage-tests")
    }
}

task productCardDetail_tests(type: Test) {
    useJUnitPlatform {
        includeTags("productCardDetail-tests")
    }
}

task categoriesPage_tests(type: Test) {
    useJUnitPlatform {
        includeTags("categoriesPage-tests")
    }
}